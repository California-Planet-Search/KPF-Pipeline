from modules.radial_velocity.src.radial_velocity_init import RadialVelocityInit
from modules.radial_velocity.src.radial_velocity import RadialVelocity

rv_init = RadialVelocityInit()
input_lev1_pattern = output_dir + '*' + '_part'+ '*_' + str(rect_method) + lev1_stem_suffix + '.fits'
for input_L1_file in find_files(input_lev1_pattern):
	_, short_lev1 = split(input_L1_file)
	lev1_stem, lev1_ext = splitext(short_lev1)
	output_lev2_file = output_dir + lev1_stem + lev2_stem_suffix + lev1_ext
	if not find_files(output_lev2_file):
		lev1_data = kpf1_from_fits(input_L1_file, data_type='KPF')
		rv_data = RadialVelocity(lev1_data, rv_init, order_name=order_name, start_order=rv_start_order, 
					end_order=rv_end_order, start_x=col_range[0], end_x=col_range[1])
		result = to_fits(rv_data, output_lev2_file)
