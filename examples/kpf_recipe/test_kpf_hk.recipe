from modules.ca_hk.src.ca_hk_extraction import CaHKExtraction

 
data_type = config.ARGUMENT.data_type

lev0_stem_s = config.ARGUMENT.input_lev0_file_prefix
input_hk_pattern = test_data_dir + '2D/'+ lev0_stem_s + '*.fits'
input_trace_file = test_data_dir + 'masterfiles/'+ config.ARGUMENT.hk_trace_path

fiber_list = config.ARGUMENT.hk_fiber_list
lev1_stem_suffix = config.ARGUMENT.output_lev1_suffix
output_exts = config.ARGUMENT.hk_output_exts

for hk_file in find_files(input_hk_pattern):
	_, short_hk_flat = split(hk_file)
	lev0_stem, lev0_flat_ext = splitext(short_hk_flat)
	hk_data = kpf0_from_fits(hk_file)
	
	lev1_stem = lev0_stem  + '_' + rect_method + '_' + extract_method+ lev1_stem_suffix + '.fits'

	exist_lev1_file =  output_dir + config.ARGUMENT.output_extraction + lev1_stem
	if find_files(exist_lev1_file):
		output_data = kpf1_from_fits(exist_lev1_file)
	else:
		output_data = None
	output_lev1_hk = CaHKExtraction(hk_data, input_trace_file, fiber_list, output_data, output_exts=output_exts)
	output_hk_file = output_dir + config.ARGUMENT.output_hk + lev0_stem + lev1_stem_suffix + '.fits'
	result = to_fits(output_lev1_hk, output_hk_file)


