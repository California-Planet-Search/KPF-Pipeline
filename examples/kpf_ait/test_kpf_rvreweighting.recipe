all_lev2_files = find_files(lev2_pattern)
lev2_list = []
for lev2_file in all_lev2_files:
	lev2_data = kpf2_from_fits(lev2_file, data_type=data_type)
	lev2_list = lev2_list + [lev2_data]

# recalculate ratio table based on existing lev2 files
if all_lev2_files:
	ratio_table = []
	rw_csv = output_rv_rw  + 'ccf_ratio_table_'+ rect_method + '_' + extract_method + '_' + reweighting_method
	for idx in ccd_idx:
		ccf_ratio_file = rw_csv + '_' + ccf_ext_names[idx] + csv_ext
		start_seg = area_def[idx][0]
		t_segment = area_def[idx][1] - start_seg + 1
		ratio_ref = RadialVelocityReweightingRef(lev2_list, reweighting_method, t_segment, ccf_hdu_name=ccf_ext_names[idx],
							ccf_ratio_file=ccf_ratio_file, ccf_start_index=start_seg)
		ratio_table = ratio_table + [ratio_ref]

	i = 0
	for f in all_lev2_files:
		_, short_lev2 = split(f)
		reweighted_output = output_rv_rw + short_lev2
		lev2_rv = lev2_list[i]
		for idx in ccd_idx:
			start_seg = area_def[idx][0]
			t_segment = area_def[idx][1] - start_seg + 1
			lev2_rv = RadialVelocityReweighting(lev2_rv, reweighting_method, ratio_table[idx], t_segment, rv_init,
							ccf_ext=ccf_ext_names[idx], rv_ext=rv_ext,  rv_ext_idx=idx, ccf_start_index=start_seg)
		result = to_fits(lev2_rv, reweighted_output)
		i = i + 1

