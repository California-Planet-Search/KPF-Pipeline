**** The following lists recipe/config examples for KPF pipeline, (kpf is run under folder KPF-Pipeline).

** The instrument data is stored at ownCloud/KPF-Pipeline-TestData where ownCloud is the folder at the same level of KPF-Pipeline and KeckDRPFramework. 

** The simple recipe and config pair for documentation:

- kpf examples/simple.recipe examples/docs_simple.cfg
  Purpose: perform simple module test on KPFModExample from modules.Trivial.KPFM_Trivial
  note: this is the simple recipe and config example used in documentation, "Running a simple module".

** The recipe and config pairs to perform order trace, optimal extraction, radial velocity  are listed as below:

- kpf examples/test_neid.recipe  examples/default_neid.cfg 
  purpose: perform order_trace, optimal extraction and radial velocity for NEID on target Tau Ceti
  master recipe: test_neid.recipe
  subrecipes: test_order_trace.recipe, 
	      test_optimal_extraction.recipe, test_optimal_extraction_clip.recipe (faster spectral extraction by using clip file), 
			or test_optimal_extraction_rect_clip.recipe (faster spectral extraction and creating rectification result by using clip file). 
	      test_neid_radial_velocity.recipe (no ccf reweighting) or
              test_neid_radial_velocity_reweight.recipe (reweight ccf orders while performing radial velocity) or 
              test_neid_radial_velocity_reweight_2.recipe (reweight ccf orders after radial velocity is resolved)

  note: if using test_optimal_extraction.recipe:
               create folder 'test_results/neid' under KPF-Pipeline to contain the lev0, lev1 and lev2 results if using test_optimal_extraction.recipe
	if using test_optimal_extraction_clip.recipe or test_optimal_extraction_rect_clip.recipe:
	       create folder 'test_results/neid/clip_np/vertical', 'test_results/neid/clip_np/normal' to contain polygonal clipping result and
                      folder 'test_results/neid/tmp_flat_rect_obs_clip', 'test_results/neid/tmp_flat_rect_obs_rect' to contain lev0, lev1, and lev2 results and
                      'ln -s ../clip_np' to link to the folder containing clipping results.

- kpf examples/data_range_test/test_neid_part.recipe examples/data_range_test/defaiult_neid_part.cfg
  purpose: preform order trace, optimal extraction and radial velocity by specifying the data range and the order range.
  master recipe: test_neid_part.recipe
  subrecipe: test_order_trace_part.recipe, test_optimal_extraction_part.recipe, test_neid_radial_velocity_part.recipe
  note: create folder test_results/neid_data_range under KPF-Pipeline to contain the results

- kpf examples/test_bc.recipe examples/default_bc.cfg
  purpose: preform barycentric correction event by either taking the observaton configuration by using radial velocity init or
           from a configuration defined in default_bc.cfg (barycentric_correction in section 'MODULE_CONFIGS').
  master recipe: test_bc.recipe
  note: create folder test_results/neid under KPF-Pipeline to contain the results

** The configs for the regression test on recipes: 
- default_recipe_test_neid.cfg, default_recipe_test_paras.cfg, and default_recipe_neid_hd127334.cfg are the configuration files used for recipe test,
  tests/regression/test_order_trace_recipe.py, tests/regression/test_optimal_extraction.recipe, tests/regression/test_radial_velocity_recipe.py and
  tests/regression/test_radial_velocity_ccf_reweight_recipe.py. 
- default_simple.cfg is the configuration file for tests/regression/test_recipe.py


** the recipe and config for KPF simulated flat and science data
-- kfp examples/test_kpf.recipe examples/default_kfp.cfg
   using the flat and science at ownCloud/KPF-Pipeline-TestData/KPF-Pipeline-TestData/KPF_Simulated_Data/flat and 
   ownCloud/KPF-Pipeline-TestData/KPF-Pipeline-TestData/KPF_Simulated_Data/science. 



