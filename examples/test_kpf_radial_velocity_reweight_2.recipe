from modules.radial_velocity.src.radial_velocity_init import RadialVelocityInit
from modules.radial_velocity.src.radial_velocity import RadialVelocity
from modules.radial_velocity.src.radial_velocity_reweighting_ref import RadialVelocityReweightingRef
from modules.radial_velocity.src.radial_velocity_reweighting import RadialVelocityReweighting

reweighting_method = config.ARGUMENT.reweighting_method
data_ext_rv = config.ARGUMENT.orderlet_names_rv
rv_init = RadialVelocityInit(start_time="2020-04-18")
ccf_ext_names = ['GREEN_CCF', 'GREEN_CCF', 'GREEN_CCF', 'RED_CCF', 'RED_CCF', 'RED_CCF']
rv_ext = 'RV'

input_lev1_pattern = output_dir + '*' + obs_rect + '_' + rect_method + '_' + extract_method + op_tag + lev1_stem_suffix + '.fits'
lev2_list = []
all_lev2_files = []
for input_L1_file in find_files(input_lev1_pattern):
	_, short_lev1 = split(input_L1_file)
	lev1_stem, lev1_ext = splitext(short_lev1)
	output_lev2_file = output_dir + lev1_stem + lev2_stem_suffix + lev1_ext
	all_lev2_files = all_lev2_files + [output_lev2_file]
	if not find_files(output_lev2_file):
		lev1_data = kpf1_from_fits(input_L1_file, data_type='KPF')
		rv_data = None
		idx = 0
		for data_ext in data_ext_rv:      # orderlet_names_rv=['GREEN_SCI_FLUX1', 'GREEN_SCI_FLUX2', 'GREEN_SCI_FLUX3', 'RED_SCI_FLUX1', 'RED_SCI_FLUX2', 'RED_SCI_FLUX3'
			for ccd_rv in ccd:
				rv_data = RadialVelocity(lev1_data, rv_init, rv_data, data_ext, ccf_ext=ccf_ext_names[idx], rv_ext=rv_ext)
				idx = idx + 1

		result = to_fits(rv_data, output_lev2_file)
		lev2_list = lev2_list + [rv_data]
	else:
		rv_data = kpf2_from_fits(output_lev2_file, data_type='KPF')
		lev2_list = lev2_list + [rv_data]	

