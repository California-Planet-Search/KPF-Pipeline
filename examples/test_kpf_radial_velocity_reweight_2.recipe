from modules.radial_velocity.src.radial_velocity_init import RadialVelocityInit
from modules.radial_velocity.src.radial_velocity import RadialVelocity
from modules.radial_velocity.src.radial_velocity_reweighting_ref import RadialVelocityReweightingRef
from modules.radial_velocity.src.radial_velocity_reweighting import RadialVelocityReweighting

reweighting_method = config.ARGUMENT.reweighting_method
data_ext_rv = config.ARGUMENT.orderlet_names_rv
ccf_ext_names = config.ARGUMENT.ccf_ext
rv_ext = config.ARGUMENT.rv_ext
rv_init = RadialVelocityInit(start_time="2020-04-18")

rv_ext = 'RV'
rv_idx = [0]
area_def = [0, -1, 0, -1]

input_lev1_pattern = output_dir + '*' + obs_rect + '_' + rect_method + '_' + extract_method + op_tag + lev1_stem_suffix + '.fits'

lev2_list = []
all_lev2_files = []
ratio_table = []
total_segment = None
start_seg = 0

for input_L1_file in find_files(input_lev1_pattern):
	_, short_lev1 = split(input_L1_file)
	lev1_stem, lev1_ext = splitext(short_lev1)
	output_lev2_file = output_dir + lev1_stem + lev2_stem_suffix + lev1_ext
	all_lev2_files = all_lev2_files + [output_lev2_file]
	lev1_data = kpf1_from_fits(input_L1_file, data_type='KPF')	

	if not find_files(output_lev2_file):
		lev1_data = kpf1_from_fits(input_L1_file, data_type='KPF')
		rv_data = None
		for idx in rv_idx:
                	rv_data = RadialVelocity(lev1_data, rv_init, rv_data,
                                                data_ext_rv[idx], ccf_ext=ccf_ext_names[idx], rv_ext=rv_ext,
                                                rv_set=idx, area_def=area_def, ccf_engine='c')

		result = to_fits(rv_data, output_lev2_file)
		lev2_list = lev2_list + [rv_data]
	else:
		rv_data = kpf2_from_fits(output_lev2_file, data_type='KPF')
		lev2_list = lev2_list + [rv_data]	


for idx in rv_idx:
        ccf_ratio_file = output_dir + 'ccf_ratio_table_'+ rect_method + '_' + extract_method + '_' + reweighting_method+ '_' + ccf_ext_names[idx] + '.csv'

        if not find_files(ccf_ratio_file):
                ratio_ref = RadialVelocityReweightingRef(lev2_list, reweighting_method, total_segment, ccf_hdu_name=ccf_ext_names[idx],
                                                        ccf_ratio_file=ccf_ratio_file, ccf_start_index=start_seg)
        else:
                ratio_ref = RadialVelocityReweightingRef(lev2_list, reweighting_method, total_segment, ccf_ratio_file=ccf_ratio_file, is_ratio_data=True)
        ratio_table = ratio_table + [ratio_ref]

i = 0
for f in all_lev2_files:
        _, short_lev2 = split(f)
        lev2_stem, lev2_ext = splitext(short_lev2)
        reweighted_output = output_dir + lev2_stem + '_reweighted2_' + reweighting_method +lev2_ext

        lev2_rv = lev2_list[i]

        for idx in rv_idx:
                lev2_rv = RadialVelocityReweighting(lev2_rv, reweighting_method, ratio_table[idx], total_segment, rv_init,
                                                ccf_ext=ccf_ext_names[idx], rv_ext=rv_ext,  rv_ext_idx=idx, ccf_start_index=start_seg)
        result = to_fits(lev2_rv, reweighted_output)
        i = i + 1
