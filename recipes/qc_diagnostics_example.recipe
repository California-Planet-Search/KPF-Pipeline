# This is an example recipe showing use of the Quality Control and Diagnostics frameworks

from modules.quality_control.src.quality_control_framework import QualityControlFramework
from modules.quicklook.src.diagnostics_framework import DiagnosticsFramework

data_type = config.ARGUMENT.data_type
data_level_str = config.ARGUMENT.data_level_str
input_fits_filename = config.ARGUMENT.input_fits_filename
output_fits_filename = config.ARGUMENT.output_fits_filename

if exists(input_fits_filename):
    if 'L0' in data_level_str:
        kpf_object = kpf0_from_fits(input_fits_filename, data_type = data_type)
    elif '2D' in data_level_str:
        kpf_object = kpf0_from_fits(input_fits_filename, data_type = data_type)
    elif 'L1' in data_level_str:
        kpf_object = kpf1_from_fits(input_fits_filename, data_type = data_type)
    elif 'L2' in data_level_str:
        kpf_object = kpf2_from_fits(input_fits_filename, data_type = data_type)

    qc_return_list = QualityControlFramework(data_type, data_level_str, kpf_object, 0)
    exit_code = qc_return_list[0]
    if exit_code == 1:
        kpf_object = qc_return_list[1]

    diag_return_list = DiagnosticsFramework(data_level_str, kpf_object, 'all')
    exit_code = diag_return_list[0]
    if exit_code == 1:
        kpf_object = diag_return_list[1]

    result = to_fits(kpf_object, output_fits_filename)