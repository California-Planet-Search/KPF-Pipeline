
if context.watch:
    file_list = find_files(context.file_path)
else:
    file_list = find_files(search_string)

file_path = context.file_path
date_dir = context.date_dir

for raw_file_path in file_list:
    date_dir = context.date_dir
    output_dir = config.WATCHFOR_L0.output_dir + date_dir + "/"

    _,file_name_ext = split(raw_file_path)
    file_name,ext = splitext(file_name_ext)
    output_file_name = output_dir + file_name + ext
    output_file_exists = exists(output_file_name)

    if overwrite or not output_file_exists:
        ref_output_red = OrientationReference(channel_orientation_ref_path_red, data_type)

        # compute red-chip ffi
        l0 = kpf0_from_fits(raw_file_path, data_type)
        red_ffi = OverscanSubtraction(l0,
                                      pl_overscan_reg_red,
                                      srl_overscan_reg_red,
                                      overscan_method,
                                      order,
                                      oscan_clip,
                                      ref_output_red,
                                      lev0_ffi_ext_red,
                                      data_type,
                                      prescan_reg,
                                      gain_key)

        ref_output_green = OrientationReference(channel_orientation_ref_path_green, data_type)

        # add green-chip ffi to data containing red-chip ffi
        L0_with_ffi = OverscanSubtraction(red_ffi,
                                          pl_overscan_reg_green,
                                          srl_overscan_reg_green,
                                          overscan_method,
                                          order,
                                          oscan_clip,
                                          ref_output_green,
                                          lev0_ffi_ext_green,
                                          data_type,
                                          prescan_reg,
                                          gain_key)

        recipe_complete = to_fits(L0_with_ffi, output_file_name)
